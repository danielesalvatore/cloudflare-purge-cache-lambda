service: cloudflare-purge-cache-lambda

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-1
  profile: '${env:AWS_PROFILE}'
  stage: '${env:AWS_STAGE}'
  timeout: 30
  memorySize: '2048'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'ssm:DescribeParameters'
        - 'ssm:GetParameters'
        - 'ssm:GetParameter'
      Resource:
        - 'arn:aws:ssm:eu-west-1:*:parameter/cloudflare-purge-cache-lambda*'
    - Effect: Allow
      Action:
        - 'kms:Decrypt'
      Resource: '*'
    # SQS
    - Effect: Allow
      Action:
        - 'sqs:*'
      Resource:
        - Fn::GetAtt: [URLToPurgeQueue, Arn]
        - Fn::GetAtt: [PurgeRequestsQueue, Arn]
  environment:
    PAGE_LOAD_TIMEOUT: 20000
    LOGGING: true
  vpc:
    logRetentionInDays: '14'
    usagePlan:
      quota:
        limit: '5000'
        offset: '2'
        period: MONTH
      throttle:
        burstLimit: '200'
        rateLimit: '100'
  package:
    exclude:
      - .git/**
      - layer/**
      - layer1/**
      - node_modules/**
      - node_modules/**/chrome-aws-lambda/**
  tags:
    ApplicationName: 'cloudflare-purge-cache-lambda'

resources:
  Resources:
    PurgeRequestsQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: 'PurgeRequestsQueue'
    URLToPurgeQueue:
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: 'URLToPurgeQueue'

functions:
  # cloudflare:
  #   handler: src/cloudflare.handler
  #   events:
  #     - sqs:
  #         queueName: URLToPurgeQueue
  # Fn::GetAtt:
  #   - FaoWebsiteTypo3ToProcessQueue
  #   - Arn

  api:
    handler: src/api.handler
    events:
      - http:
          method: POST
          path: '/'
          cors: true
          enabled: ${self:custom.enabled.${opt:stage, self:provider.stage}}

plugins:
  - serverless-cloudside-plugin
  - serverless-webpack
  - serverless-dotenv-plugin
  - serverless-offline-dotenv
  - serverless-offline-sqs
  - serverless-offline

custom:
  enabled:
    Development: false
    Production: true
  webpack:
    webpackConfig: webpack.config.js
    includeModules:
      forceExclude:
        - aws-sdk
  serverless-offline:
    host: 0.0.0.0
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://0.0.0.0:9324
    region: eu-west-1
    skipCacheInvalidation: false
